{"version":3,"sources":["personServer.js","Components/Persons.js","Components/PersonForm.js","Components/Filter.js","App.js","index.js"],"names":["baseUrl","personServer","getAll","axios","get","then","response","data","create","newContact","post","update","id","put","remove","delete","Persons","contacts","searchTerm","deletePerson","filter","n","name","toLowerCase","startsWith","map","person","number","onClick","PersonForm","addName","newName","setNewName","newNumber","setNewNumber","onSubmit","value","onChange","event","target","type","Filter","setSearchTerm","Notification","notify","setNotify","message","setTimeout","status","className","App","useState","setContacts","useEffect","initialPersons","preventDefault","findPerson","find","window","confirm","returnPerson","catch","error","console","log","returnedPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1fb6532b.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newContact => {\r\n  const request = axios.post(baseUrl, newContact)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newContact) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newContact)\r\n  return request.then(response => response.data)\r\n}\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response =>response.data)\r\n}\r\n\r\nconst personServer = { getAll, create, update, remove }\r\n\r\nexport default personServer\r\n","import React from 'react'\r\n\r\nconst Persons = ({contacts, searchTerm, deletePerson}) => {\r\n\r\n  return (\r\n    <div>\r\n      <h1>Numbers</h1>        \r\n      { contacts\r\n        .filter(n => (n.name.toLowerCase()).startsWith(searchTerm.toLowerCase()) )\r\n        .map(person =><li key={person.name}>{person.name} {person.number} <button onClick={()=>deletePerson(person)}>delete</button></li>)\r\n      }\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Persons\r\n","import React from 'react'\r\n\r\nconst PersonForm = ({addName, newName, setNewName, newNumber, setNewNumber}) => {\r\n  return(\r\n    <div>\r\n      <h1>Add a new</h1>\r\n      <form onSubmit={addName}>\r\n        <div>name: <input value={newName} onChange={(event)=> setNewName(event.target.value)} /></div>\r\n        <div>number: <input value={newNumber} onChange={(event)=>setNewNumber(event.target.value)} /></div>\r\n        <button type=\"submit\">add</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nconst Filter = ({searchTerm, setSearchTerm})=>{\r\n  return (\r\n    <div>\r\n      filter shown with <input value={searchTerm} onChange={(event)=>setSearchTerm(event.target.value)}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","import { useState, useEffect } from \"react\";\r\nimport personServer from \"./personServer\";\r\nimport Persons from \"./Components/Persons\";\r\nimport PersonForm from \"./Components/PersonForm\";\r\nimport Filter from \"./Components/Filter\";\r\n\r\nconst Notification = ({notify, setNotify}) => {\r\n  \r\n  if(!notify.message){\r\n    return null\r\n  }\r\n\r\n  setTimeout(()=>{\r\n    setNotify({status: null, message: null })\r\n  }, 5000)\r\n\r\n  return (\r\n    <div className={notify.status}>\r\n      {notify.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [ newName, setNewName] = useState('');\r\n  const [ newNumber, setNewNumber ]= useState('');\r\n  const [ searchTerm, setSearchTerm ] = useState('');\r\n\r\n  const [ contacts, setContacts] = useState([]);\r\n\r\n  const [ notify, setNotify ] = useState({\r\n    status: null,\r\n    message: null\r\n  })\r\n\r\n  useEffect(()=>{\r\n    personServer\r\n     .getAll()\r\n     .then(initialPersons =>setContacts(initialPersons))    \r\n  }, [notify])\r\n\r\n  const addName = (event) => {\r\n    event.preventDefault();\r\n\r\n    //check if the name already exists, if exists, confirm to update or keep it unchanged\r\n    const findPerson = contacts.find(n=> n.name === newName)\r\n    if(findPerson){\r\n      const ok = window.confirm(`${findPerson.name} is already added to the phonebook, replace the old number with a new one?`)\r\n      \r\n      if(ok){\r\n        personServer\r\n          .update(findPerson.id, {...findPerson, number: newNumber})\r\n          .then(returnPerson =>{\r\n            setContacts(contacts.map(person => person.name === newName ? returnPerson : person))\r\n            setNotify({status: \"success\", message: `${findPerson.name} has been updated!` })\r\n          })\r\n          .catch(error => {\r\n            console.log(error.message)\r\n            setNotify({status: \"error\", message: `${findPerson.name} has been deleted already.` })\r\n          })\r\n      }\r\n\r\n      setNewName('');\r\n      setNewNumber('');      \r\n      return;\r\n    }\r\n\r\n    // add a new contact info\r\n    const newContact = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n\r\n    personServer\r\n      .create(newContact)\r\n      .then(returnedPerson => {\r\n        setContacts(contacts.concat(returnedPerson))\r\n        setNotify({status: \"success\", message: `Added ${newName} Successfully!` })\r\n        setNewName('');\r\n        setNewNumber('');\r\n      })\r\n  }\r\n\r\n  const deletePerson = (person) => {\r\n    const ok = window.confirm(`Delete ${person.name}`)\r\n\r\n    if(ok){\r\n      personServer\r\n        .remove(person.id)\r\n        .then(returnedPerson => {\r\n          setContacts(contacts.filter(person => (person.id !==returnedPerson.id)))\r\n          setNotify({status: \"error\", message: `${person.name} has been removed!` })\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Notification notify={notify} setNotify={setNotify} />\r\n      <Filter searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\r\n      \r\n      <PersonForm\r\n        addName={addName}\r\n        newName={newName}\r\n        setNewName={setNewName}\r\n        newNumber={newNumber}\r\n        setNewNumber={setNewNumber}\r\n      />\r\n      \r\n      <Persons \r\n        contacts={contacts}\r\n        searchTerm={searchTerm}\r\n        deletePerson = {deletePerson}\r\n      />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './index.css'\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}